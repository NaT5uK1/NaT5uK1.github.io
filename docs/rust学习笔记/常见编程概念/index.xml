<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>常见编程概念 on Confect</title><link>https://nat5uk1.github.io/docs/rust%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%B8%B8%E8%A7%81%E7%BC%96%E7%A8%8B%E6%A6%82%E5%BF%B5/</link><description>Recent content in 常见编程概念 on Confect</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Sun, 13 Feb 2022 14:58:25 +0800</lastBuildDate><atom:link href="https://nat5uk1.github.io/docs/rust%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%B8%B8%E8%A7%81%E7%BC%96%E7%A8%8B%E6%A6%82%E5%BF%B5/index.xml" rel="self" type="application/rss+xml"/><item><title>变量与可变性</title><link>https://nat5uk1.github.io/docs/rust%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%B8%B8%E8%A7%81%E7%BC%96%E7%A8%8B%E6%A6%82%E5%BF%B5/%E5%8F%98%E9%87%8F%E4%B8%8E%E5%8F%AF%E5%8F%98%E6%80%A7/</link><pubDate>Sun, 13 Feb 2022 14:58:53 +0800</pubDate><guid>https://nat5uk1.github.io/docs/rust%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%B8%B8%E8%A7%81%E7%BC%96%E7%A8%8B%E6%A6%82%E5%BF%B5/%E5%8F%98%E9%87%8F%E4%B8%8E%E5%8F%AF%E5%8F%98%E6%80%A7/</guid><description>变量与可变性 声明变量使用let关键字 let x = 1; 默认情况下，变量是不可变的（immutable） let x = 1; x = 2; //cannot assign twice to immutable variable `x` 在声明变量时，可通过mut关键</description></item><item><title>数据类型</title><link>https://nat5uk1.github.io/docs/rust%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%B8%B8%E8%A7%81%E7%BC%96%E7%A8%8B%E6%A6%82%E5%BF%B5/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link><pubDate>Sun, 13 Feb 2022 16:28:17 +0800</pubDate><guid>https://nat5uk1.github.io/docs/rust%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%B8%B8%E8%A7%81%E7%BC%96%E7%A8%8B%E6%A6%82%E5%BF%B5/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid><description>Rust是静态编译语言，在编译时必须明确所有变量的类型。 编译器可以通过类型推断明确变量类型 当类型推断无法明确变量类型时，就必须添加类型标注 标量类型 整数</description></item><item><title>函数</title><link>https://nat5uk1.github.io/docs/rust%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%B8%B8%E8%A7%81%E7%BC%96%E7%A8%8B%E6%A6%82%E5%BF%B5/%E5%87%BD%E6%95%B0/</link><pubDate>Mon, 14 Feb 2022 17:57:23 +0800</pubDate><guid>https://nat5uk1.github.io/docs/rust%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%B8%B8%E8%A7%81%E7%BC%96%E7%A8%8B%E6%A6%82%E5%BF%B5/%E5%87%BD%E6%95%B0/</guid><description>函数声明 使用fn关键字声明函数： fn a_function() { println!(&amp;quot;A function.&amp;quot;); } 函数参数 在声明函数时，必须指明函数的参数类型 fn main() { a_function(5); } fn a_function(x: i32) { println!(&amp;quot;The value of x is: {}&amp;quot;, x); } 函数体中的语句与表达式 Rus</description></item><item><title>控制流</title><link>https://nat5uk1.github.io/docs/rust%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%B8%B8%E8%A7%81%E7%BC%96%E7%A8%8B%E6%A6%82%E5%BF%B5/%E6%8E%A7%E5%88%B6%E6%B5%81/</link><pubDate>Mon, 14 Feb 2022 18:34:00 +0800</pubDate><guid>https://nat5uk1.github.io/docs/rust%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%B8%B8%E8%A7%81%E7%BC%96%E7%A8%8B%E6%A6%82%E5%BF%B5/%E6%8E%A7%E5%88%B6%E6%B5%81/</guid><description>if表达式 if是一个表达式，而不是语句，所以可以放在等号的右边 fn main() { let condition = true; let number = if condition { 5 } else { 6 }; println!(&amp;quot;The value of number is: {}&amp;quot;, number); } if表达式的条件必须是bool类型</description></item></channel></rss>